@model LoginViewModel

@{
    ViewData["Title"] = "Login";

}

<h1>Cookie Authentication</h1>

<p>Currently, the user is <strong>@(User.Identity?.Name ?? "Anonymous")</strong>.</p>

@if (User.Identity?.IsAuthenticated ?? false)
{
    <p class="text-success">They are authenticated!</p>
}
else
{
    <p class="text-danger">They are <strong>not</strong> authenticated!</p>
}

<h2>Claims</h2>

@if (User.Claims.Any())
{
    <ul>
        @foreach (var claim in User.Claims)
        {
            <li><strong>@claim.Type:</strong> @claim.Value</li>
        }
    </ul>
}
else
{
    <p>No claims found!</p>
}


<div class="container-fluid">
    <div class="row">
        <div class="col-12 col-md-6 offset-md-4 position-relative" style="top: -500px;">
            <!-- Yukarı taşıma -->
            <h2 class="text-center">Login</h2> <!-- Login başlığı formun içinde olacak -->
            <form asp-controller="Auth" asp-action="Login" method="post">
                <div class="form-group">
                    <label asp-for="Email"></label>
                    <input asp-for="Email" class="form-control" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Password"></label>
                    <input asp-for="Password" type="password" class="form-control" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>

                <div class="d-flex justify-content-between">
                    <button type="submit" class="btn btn-primary">Login</button>
                </div>
            </form>
        </div>
    </div>
</div>
</div>